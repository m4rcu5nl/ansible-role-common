---
# tasks file for common
- block: # Set basic host information 

  - name: 'Set hostname'
    hostname: 
      name: "{{ common_hostname }}"
    tags: 
      - hostname
  
  - name: 'Set timezone'
    timezone: 
      name: "{{ common_timezone }}"
    tags: 
      - timezone
  
  tags: 
    - configuration
  become: True
  become_user: root

- block: # Manage groups 
  
  - name: 'Add custom groups'
    group: 
      name: "{{ item.name }}"
      state: "{{ item.state }}"
    with_items: "{{ common_groups }}"
    when:
      - common_groups is defined
    loop_control:
      label: "{{ item.name }}"
  
  - name: 'Configure sudoers for groups'
    template:
      src: sudoers.j2
      dest: /etc/sudoers.d/{{ item.name }}
      validate: 'visudo -cf %s'
    with_items: "{{ common_groups }}"
    when:
      - item.sudoers is defined
    loop_control:
      label: "{{ item.name }}"
  
  tags: 
    - management
    - groups
  become: True
  become_user: root

- block: # Manage users
  
  - name: 'Add users'
    user: 
      name: "{{ item.name }}"
      shell: "{{ item.shell }}"
      state: "{{ item.state }}"
      groups: "{{ item.groups }}"
      append: yes
    with_items: "{{ common_users }}"
    when:
      - common_users is defined
    loop_control:
      label: "{{ item.name }}"
    
  - name: 'Add authorized keys'
    authorized_key: 
      user: "{{ item.name }}"
      key: "{{ item.sshkey }}"
    with_items: "{{ common_users }}"
    when: 
      - not ansible_check_mode
      - item.sshkey is defined
    loop_control:
      label: "{{ item.name }}"
  
  tags: 
    - management
    - users
  become: True
  become_user: root

- block: # Install Epel and common_packages if set
  - name: 'Add Epel repository (the easy way)'
    package:
      name: epel-release
      state: present
    when: 
      - ansible_distribution == "CentOS"
      - ansible_distribution_major_version >= 6
    tags:
      - repositories

  - name: 'Install some common packages'
    package:
      name: "{{ item.name }}"
      state: "{{ item.state }}"
    with_items: "{{ common_packages }}"
    when:
      - common_packages is defined
    loop_control:
      label: "{{ item.name }}"
    tags: 
      - packages
    
  tags: 
    - installation
  become: True
  become_user: root

